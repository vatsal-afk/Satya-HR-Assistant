# -*- coding: utf-8 -*-
"""Untitled63.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xZ1zdkeH09I0Fed8k9wH_mA7otz1ZRPs
"""

import google.generativeai as genai
import pdfplumber
import re

# Function to preprocess extracted text
def preprocess_text(text):
    # Remove multiple spaces and newlines
    text = re.sub(r'\s+', ' ', text)  # Replace multiple whitespace/newlines with a single space
    # Remove leading and trailing spaces
    text = text.strip()
    return text

# Function to extract text from the resume PDF
def extract_text_from_pdf(file_path):
    text = ""
    with pdfplumber.open(file_path) as pdf:
        for page in pdf.pages:
            page_text = page.extract_text()
            if page_text:
                text += page_text
    # Preprocess the extracted text
    cleaned_text = preprocess_text(text)
    return cleaned_text

# Main function to orchestrate the process
def main():
    # Replace with your actual Google API key
    api_key = 'AIzaSyBGZXYZllXSffYk3vUNSfRoINw20mGS8Ys'

    # Configure the API key for generative AI
    genai.configure(api_key=api_key)

    # Input file path for the resume
    resume_pdf_path = "resume.pdf"  # Replace with the actual resume file path

    # Step 1: Extract text from the resume PDF
    resume_text = extract_text_from_pdf(resume_pdf_path)

    # Step 2: Use the Google Generative AI model to analyze the resume
    model = genai.GenerativeModel("gemini-1.5-flash")

    # Step 3: Generate content with specific instructions for the AI model
    prompt = f"{resume_text}, give me the name of the job profile the person is applying for and list their technical skills. Also, summarize the whole resume in total 50 words."

    response = model.generate_content(prompt)

    # Step 4: Print the response (summary, job profile, and technical skills)

    print(response.text)

if __name__ == "__main__":
    main()